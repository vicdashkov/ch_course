Hi everyone to our next lesson

Ok, so first we begin by creating POC

I always wanted to create Pokemon business
With Ch My dreams come true finally.
For various aspects of my Pokemon business perhaps there’re other
tools I can use, but when it comes to tracking evens associated with Pokemons, 
I doubt there’s a better tool than CH.

Ok, so for the POC the eisiest tool to start is Docker. We go to 
https://hub.docker.com/r/yandex/clickhouse-server/
and there’s fairly standart stuff.
It looks like they suggest using client and server in combination. 
Let’s take a closer look at commands thay provide  

docker run -d --name some-clickhouse-server --ulimit nofile=262144:262144 yandex/clickhouse-server
docker run -it --rm --link some-clickhouse-server:clickhouse-server yandex/clickhouse-client --host clickhouse-server

Ok, I run a first one. Eveerything seems to be fine so far. 
Second one worked as well. We are connected. Lets take a look at what we have here 

SHOW DATABASES 
┌─name────┐ 
│ default │ 
│ system  │ 
└─────────┘ 

I select tables from these DBs. Default is empty and 
system has 23 rows in set
Ok. We’ll take a look at these guys at a later time. 
As of now when I ran docker ps I see that ports are not open.
I also strongly suspect that persistence is not set.

CH expects to persist data
(/var/lib/clickhouse/). 
Let’t add this volume to our docker. And perheps lets use docker compose  

Let's also structure our config folder properly.
it will greatly simplify our lives later on

What I've done here is broken down our one big congif.xml into a bit more managable chunks

and we should be able to connect to db like so
docker-compose run --rm client ch1 user vic password 12345

if we also add client-config.xml to our project root we should be able to spare our admins' health on not
exposing passwords

oh and by the way settings like adding user will be hot reloaded by ch, so that's nice.