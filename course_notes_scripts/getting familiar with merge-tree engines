Preparation:
* put down all dockers
* code editor scrips - code editor project files - slides
* start ch in backgroud
* setup inserter config

DO: demonstrate SHOW PROCESSLIST

Hello everyone,
In this lesson we'll talk about merge-tree family of CH engines

CH team reccomends using engines of this family pretty much for most tasks
They say those engines are the most advanced and feature reach
and data replication is possible only with engines from this family

There are other engines as well, and we'll talk about them in due time, but chances are
you'll start with some kind of merge tree table and stick to it for a long time

Let's connect to our newly configured ch instance
and try to create a table and a database

I was tempted to create a table like so at first. cool kinds don't read the docs, ha
But yeah this will fail

and the reason why it fails is that we need to let CH know about
some of the configs for this table
These configs will be the main focus of this lecture

If we look at file called experiments_tables.sql
that you'll find in course files, you'll notice that there are of course different
ways to setup partitionain and order by for our tables

What is event worse, in older days docs would say
    A MergeTree table must have a separate column containing the date. Here,
    it is the EventDate column. The date column must have the 'Date' type (not 'DateTime').
So what do we do?

We will benchmark different setups and then try to make sense of it

It's about time I intorduce you to 2 small scripts to kind of dirty
benchmark our tables. You can find a link to gitgub in the lecture references

ok. I'll run the test and we'll come back to results once it's done

┌─table───────────────────┬─size───────┬─rows─┬
│ event_0_time_batch      │ 144.05 KiB │ 8900 │
│ event_0_date_batch      │ 416.81 KiB │ 8900 │
│ event_0_time_func_batch │ 142.65 KiB │ 8900 │
│ event_0_date_single     │ 308.38 KiB │ 1780 │
└─────────────────────────┴────────────┴──────┴

2019-02-22 20:04:52 - table: event_time_batch - db: merge_tree - inserted: 365000000 - took: 3622.57 - bulk size: 100000 - events per day: 1000000 - workers: 10
2019-02-22 21:18:53 - table: event_time_single - db: merge_tree - inserted: 365000000 - took: 4441.38 - bulk size: 1000 - events per day: 1000000 - workers: 10
2019-02-22 22:18:38 - table: even_time_order_func_batch - db: merge_tree - inserted: 365000000 - took: 3582.08 - bulk size: 100000 - events per day: 1000000 - workers: 10
2019-02-22 23:30:10 - table: even_time_order_func_single - db: merge_tree - inserted: 365000000 - took: 4291.91 - bulk size: 1000 - events per day: 1000000 - workers: 10
2019-02-23 00:32:53 - table: event_date_batch - db: merge_tree - inserted: 365000000 - took: 3760.28 - bulk size: 100000 - events per day: 1000000 - workers: 10
2019-02-23 01:49:00 - table: event_date_single - db: merge_tree - inserted: 365000000 - took: 4566.77 - bulk size: 1000 - events per day: 1000000 - workers: 10

SELECT count() from event_0_time_batch group by toYYYYMM(time) 2.677s 2.240s 3.273s
SELECT count() from event_0_date_batch group by toYYYYMM(date) 2.219s 1.797s 2.073s
SELECT count() from event_0_time_func_batch group by toYYYYMM(time) 0.250s 0.159s 0.147s

SUMMARY: seems don't have to use separate date anymore
better yet to use toYYYYMM() function to make partition even sparser
and please don't use single inserts
actually i've seen very weird behaviour from ch with many single inserts. you can kill
you server easy